{"version":3,"sources":["photos/me.jpg","Land.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","particleOpt","particles","number","value","density","enable","value_area","myPicture","position","top","left","transform","width","borderRadius","name","fontSize","color","fontWeight","zIndex","myDescription","fontFamily","bgImage","height","backgroundImage","Github","float","marginRight","Home","NextSection","onMouseOver","href","style","className","AnimatedTypingComponent","beginTyping","loop","cursorClassName","Delay","ms","Backspace","count","Profile","src","me","Land","props","state","window","scrollTo","from","opacity","to","config","duration","onRest","setState","params","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,gC,sQCOrCC,EAAc,CAClBC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,QAMdC,EAAY,CAChBC,SAAS,WACTC,IAAI,MACJC,KAAK,MACLC,UAAW,wBACXC,MAAO,QACPC,aAAc,OAGVC,EAAO,CACXN,SAAU,WACVC,IAAK,MACLC,KAAM,MACNK,SAAS,GACTC,MAAO,QACPC,WAAY,OACZN,UAAW,wBACXO,OAAQ,GAGJC,EAAgB,CACpBX,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXS,WAAY,YACZH,WAAY,OACZD,MAAO,QACPE,OAAQ,GAGJG,EAAU,CACdb,SAAU,QACVI,MAAO,OACPU,OAAQ,OACRC,gBAAiB,8CACjBL,QAAS,GAGLM,EAAS,CACXC,MAAM,QACNV,SAAS,OACTW,YAAY,GACZN,WAAY,YACZJ,MAAO,SAGLW,EAAO,CACTF,MAAM,QACNV,SAAS,OACTW,YAAY,GACZN,WAAY,YACZJ,MAAO,SAGLY,EAAc,SAAC,GAAD,EAAGC,YAAH,OAClB,6BACE,uBAAGC,KAAK,gCACN,wBAAIC,MAAOP,EAAQQ,UAAW,UAA9B,WAIF,uBAAGF,KAAK,+CACN,wBAAIC,MAAOJ,EAAMK,UAAW,UAA5B,WAQAC,EAA0B,SAAC,GAAD,IAAEF,EAAF,EAAEA,MAAF,SAASG,YAKnC,yBAAKH,MAAOA,GACV,kBAAC,IAAD,CAAQI,MAAQ,EAAMC,gBAAmB,UAAzC,cAEE,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MAClB,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KAH3B,cAKE,kBAAC,IAAOH,MAAR,CAAcC,GAAI,MAClB,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KAN3B,WAQE,kBAAC,IAAOH,MAAR,CAAcC,GAAI,MAClB,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,MAZ7B,KAiBAC,EAAU,SAAC,GAAD,IAAEP,EAAF,EAAEA,YAAF,OACd,6BACE,uBAAGH,MAASjB,GAAZ,iBACA,yBAAK4B,IAAKC,IAAIZ,MAAOxB,IACrB,kBAAC,EAAD,CAAyBwB,MAAOZ,EAAee,YAAaA,MAuCjDU,E,YAjCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAAEZ,aAAa,GAFb,E,iFAMjBa,OAAOC,SAAS,EAAG,K,+BAGX,IAAD,OAEL,OACI,6BACI,kBAAC,SAAD,CACEC,KAAM,CAACC,QAAQ,GACfC,GAAI,CAACD,QAAQ,GACbE,OAAQ,CAACC,SAAU,KACnBC,OAAQ,kBACN,EAAKC,SAAS,CAACrB,aAAa,OAE7B,SAAAW,GAAK,OACJ,yBAAKd,MAAOc,GACV,kBAAC,EAAD,CAASX,YAAa,EAAKY,MAAMZ,kBAIvC,kBAAC,IAAD,CAAWsB,OAAQxD,EAAa+B,MAAOV,IACvC,kBAAC,EAAD,W,GA5BGoC,aC1GJC,E,iLAPX,OACE,kBAAC,EAAD,U,GAJYD,aCSEE,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1c6bfd59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.d69bd5d3.jpg\";","import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport me from './photos/me.jpg';\nimport Typing from 'react-typing-animation';\nimport { Spring } from 'react-spring/renderprops';\n\nconst particleOpt = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 300\n      }\n    }\n  }\n}\n\nconst myPicture = {\n  position:'absolute',\n  top:'50%',\n  left:'50%',\n  transform: 'translate(-50%, -50%)',\n  width: '150px',\n  borderRadius: '50%',\n}\n\nconst name = {\n  position: 'absolute',\n  top: '62%',\n  left: '50%',\n  fontSize:40,\n  color: 'white',\n  fontWeight: 'bold',\n  transform: 'translate(-50%, -50%)',\n  zIndex: 1\n}\n\nconst myDescription = {\n  position: 'absolute',\n  top: '75%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  fontFamily: 'Helvetica',\n  fontWeight: 'bold',\n  color: 'white',\n  zIndex: 1\n}\n\nconst bgImage = {\n  position: 'fixed',\n  width: '100%',\n  height: '100%',\n  backgroundImage: 'linear-gradient(to right, #2193b0, #6dd5ed)',\n  zIndex: -1\n}\n\nconst Github = {\n    float:'right',\n    fontSize:'15px',\n    marginRight:10,\n    fontFamily: 'Helvetica',\n    color: 'white',\n}\n\nconst Home = {\n    float:'right',\n    fontSize:'15px',\n    marginRight:10,\n    fontFamily: 'Helvetica',\n    color: 'white',\n}\n\nconst NextSection = ( {onMouseOver} ) => (\n  <div>\n    <a href=\"https://github.com/winson-ye\">\n      <h1 style={Github} className={\"button\"}>\n        GITHUB\n      </h1>\n    </a>\n    <a href=\"https://winson-ye.github.io/react-gh-pages/\">\n      <h1 style={Home} className={\"button\"}>\n        HOME\n      </h1>\n    </a>\n\n  </div>\n);\n\nconst AnimatedTypingComponent = ({style, beginTyping}) => (\n      !beginTyping \n      ? \n      ' '\n      :\n      <div style={style}>\n        <Typing loop = {true} cursorClassName = {'cursor'}>\n          Programmer.\n          <Typing.Delay ms={1000}/>\n          <Typing.Backspace count={12}/>\n          Researcher.\n          <Typing.Delay ms={1000}/>\n          <Typing.Backspace count={12}/>\n          Teacher.\n          <Typing.Delay ms={1000}/>\n          <Typing.Backspace count={9}/>\n        </Typing>\n      </div>\n);\n\nconst Profile = ({beginTyping}) => (\n  <div>\n    <p style = {name}> I'm Winson. </p>\n    <img src={me} style={myPicture}/>\n    <AnimatedTypingComponent style={myDescription} beginTyping={beginTyping}/>\n  </div>\n)\n\n\nclass Land extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { beginTyping: false };\n    }\n\n    componentDidMount() {\n      window.scrollTo(0, 0)\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Spring\n                  from={{opacity:0}}\n                  to={{opacity:1}}\n                  config={{duration: 1000}}\n                  onRest={() =>\n                    this.setState({beginTyping: true})\n                  }>\n                  {props => (\n                    <div style={props}>\n                      <Profile beginTyping={this.state.beginTyping} />\n                    </div>\n                  )}\n                </Spring>\n                <Particles params={particleOpt} style={bgImage}/>\n                <NextSection />\n            </div>\n        );\n    }\n}\n\nexport default Land;","import React, { Component } from 'react';\nimport Land from './Land';\n\nclass App extends Component {\n\n  render() {\n    return ( \n      <Land />\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}